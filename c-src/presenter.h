/* presenter.h generated by valac 0.16.0, the Vala compiler, do not modify */


#ifndef __C_SRC_PRESENTER_H__
#define __C_SRC_PRESENTER_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>
#include <gdk/gdk.h>
#include <gtk/gtk.h>
#include <poppler.h>
#include <time.h>
#include <pango/pango.h>

G_BEGIN_DECLS


#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_TYPE_DECORATABLE (org_westhoffswelt_pdfpresenter_view_behaviour_decoratable_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_DECORATABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_TYPE_DECORATABLE, orgwesthoffsweltpdfpresenterViewBehaviourDecoratable))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_IS_DECORATABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_TYPE_DECORATABLE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_DECORATABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_TYPE_DECORATABLE, orgwesthoffsweltpdfpresenterViewBehaviourDecoratableIface))

typedef struct _orgwesthoffsweltpdfpresenterViewBehaviourDecoratable orgwesthoffsweltpdfpresenterViewBehaviourDecoratable;
typedef struct _orgwesthoffsweltpdfpresenterViewBehaviourDecoratableIface orgwesthoffsweltpdfpresenterViewBehaviourDecoratableIface;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_TYPE_BASE (org_westhoffswelt_pdfpresenter_view_behaviour_base_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_BASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_TYPE_BASE, orgwesthoffsweltpdfpresenterViewBehaviourBase))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_TYPE_BASE, orgwesthoffsweltpdfpresenterViewBehaviourBaseClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_IS_BASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_TYPE_BASE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_IS_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_TYPE_BASE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_BASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_TYPE_BASE, orgwesthoffsweltpdfpresenterViewBehaviourBaseClass))

typedef struct _orgwesthoffsweltpdfpresenterViewBehaviourBase orgwesthoffsweltpdfpresenterViewBehaviourBase;
typedef struct _orgwesthoffsweltpdfpresenterViewBehaviourBaseClass orgwesthoffsweltpdfpresenterViewBehaviourBaseClass;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_PRERENDERING (org_westhoffswelt_pdfpresenter_view_prerendering_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_PRERENDERING(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_PRERENDERING, orgwesthoffsweltpdfpresenterViewPrerendering))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_IS_PRERENDERING(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_PRERENDERING))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_PRERENDERING_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_PRERENDERING, orgwesthoffsweltpdfpresenterViewPrerenderingIface))

typedef struct _orgwesthoffsweltpdfpresenterViewPrerendering orgwesthoffsweltpdfpresenterViewPrerendering;
typedef struct _orgwesthoffsweltpdfpresenterViewPrerenderingIface orgwesthoffsweltpdfpresenterViewPrerenderingIface;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_CONTROLLABLE (org_westhoffswelt_pdfpresenter_controllable_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_CONTROLLABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_CONTROLLABLE, orgwesthoffsweltpdfpresenterControllable))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_CONTROLLABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_CONTROLLABLE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_CONTROLLABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_CONTROLLABLE, orgwesthoffsweltpdfpresenterControllableIface))

typedef struct _orgwesthoffsweltpdfpresenterControllable orgwesthoffsweltpdfpresenterControllable;
typedef struct _orgwesthoffsweltpdfpresenterControllableIface orgwesthoffsweltpdfpresenterControllableIface;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_PRESENTATION_CONTROLLER (org_westhoffswelt_pdfpresenter_presentation_controller_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_PRESENTATION_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_PRESENTATION_CONTROLLER, orgwesthoffsweltpdfpresenterPresentationController))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_PRESENTATION_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_PRESENTATION_CONTROLLER, orgwesthoffsweltpdfpresenterPresentationControllerClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_PRESENTATION_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_PRESENTATION_CONTROLLER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_PRESENTATION_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_PRESENTATION_CONTROLLER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_PRESENTATION_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_PRESENTATION_CONTROLLER, orgwesthoffsweltpdfpresenterPresentationControllerClass))

typedef struct _orgwesthoffsweltpdfpresenterPresentationController orgwesthoffsweltpdfpresenterPresentationController;
typedef struct _orgwesthoffsweltpdfpresenterPresentationControllerClass orgwesthoffsweltpdfpresenterPresentationControllerClass;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_CACHING (org_westhoffswelt_pdfpresenter_renderer_caching_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHING(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_CACHING, orgwesthoffsweltpdfpresenterRendererCaching))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_IS_CACHING(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_CACHING))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHING_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_CACHING, orgwesthoffsweltpdfpresenterRendererCachingIface))

typedef struct _orgwesthoffsweltpdfpresenterRendererCaching orgwesthoffsweltpdfpresenterRendererCaching;
typedef struct _orgwesthoffsweltpdfpresenterRendererCachingIface orgwesthoffsweltpdfpresenterRendererCachingIface;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_TYPE_BASE (org_westhoffswelt_pdfpresenter_renderer_cache_base_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_BASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_TYPE_BASE, orgwesthoffsweltpdfpresenterRendererCacheBase))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_TYPE_BASE, orgwesthoffsweltpdfpresenterRendererCacheBaseClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_IS_BASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_TYPE_BASE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_IS_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_TYPE_BASE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_BASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_TYPE_BASE, orgwesthoffsweltpdfpresenterRendererCacheBaseClass))

typedef struct _orgwesthoffsweltpdfpresenterRendererCacheBase orgwesthoffsweltpdfpresenterRendererCacheBase;
typedef struct _orgwesthoffsweltpdfpresenterRendererCacheBaseClass orgwesthoffsweltpdfpresenterRendererCacheBaseClass;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_APPLICATION (org_westhoffswelt_pdfpresenter_application_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_APPLICATION, orgwesthoffsweltpdfpresenterApplication))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_APPLICATION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_APPLICATION, orgwesthoffsweltpdfpresenterApplicationClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_APPLICATION))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_APPLICATION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_APPLICATION))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_APPLICATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_APPLICATION, orgwesthoffsweltpdfpresenterApplicationClass))

typedef struct _orgwesthoffsweltpdfpresenterApplication orgwesthoffsweltpdfpresenterApplication;
typedef struct _orgwesthoffsweltpdfpresenterApplicationClass orgwesthoffsweltpdfpresenterApplicationClass;
typedef struct _orgwesthoffsweltpdfpresenterApplicationPrivate orgwesthoffsweltpdfpresenterApplicationPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_SCALER (org_westhoffswelt_pdfpresenter_scaler_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_SCALER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_SCALER, orgwesthoffsweltpdfpresenterScaler))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_SCALER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_SCALER, orgwesthoffsweltpdfpresenterScalerClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_SCALER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_SCALER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_SCALER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_SCALER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_SCALER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_SCALER, orgwesthoffsweltpdfpresenterScalerClass))

typedef struct _orgwesthoffsweltpdfpresenterScaler orgwesthoffsweltpdfpresenterScaler;
typedef struct _orgwesthoffsweltpdfpresenterScalerClass orgwesthoffsweltpdfpresenterScalerClass;
typedef struct _orgwesthoffsweltpdfpresenterScalerPrivate orgwesthoffsweltpdfpresenterScalerPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_TYPE_SIGNAL_PROVIDER (org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_signal_provider_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_SIGNAL_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_TYPE_SIGNAL_PROVIDER, orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_SIGNAL_PROVIDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_TYPE_SIGNAL_PROVIDER, orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProviderClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_IS_SIGNAL_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_TYPE_SIGNAL_PROVIDER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_IS_SIGNAL_PROVIDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_TYPE_SIGNAL_PROVIDER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_SIGNAL_PROVIDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_TYPE_SIGNAL_PROVIDER, orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProviderClass))

typedef struct _orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider;
typedef struct _orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProviderClass orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProviderClass;
typedef struct _orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProviderPrivate orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProviderPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_BASE (org_westhoffswelt_pdfpresenter_view_base_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_BASE, orgwesthoffsweltpdfpresenterViewBase))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_BASE, orgwesthoffsweltpdfpresenterViewBaseClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_IS_BASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_BASE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_IS_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_BASE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_BASE, orgwesthoffsweltpdfpresenterViewBaseClass))

typedef struct _orgwesthoffsweltpdfpresenterViewBase orgwesthoffsweltpdfpresenterViewBase;
typedef struct _orgwesthoffsweltpdfpresenterViewBaseClass orgwesthoffsweltpdfpresenterViewBaseClass;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_DEFAULT (org_westhoffswelt_pdfpresenter_view_default_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_DEFAULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_DEFAULT, orgwesthoffsweltpdfpresenterViewDefault))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_DEFAULT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_DEFAULT, orgwesthoffsweltpdfpresenterViewDefaultClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_IS_DEFAULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_DEFAULT))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_IS_DEFAULT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_DEFAULT))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_DEFAULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_DEFAULT, orgwesthoffsweltpdfpresenterViewDefaultClass))

typedef struct _orgwesthoffsweltpdfpresenterViewDefault orgwesthoffsweltpdfpresenterViewDefault;
typedef struct _orgwesthoffsweltpdfpresenterViewDefaultClass orgwesthoffsweltpdfpresenterViewDefaultClass;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_PDF (org_westhoffswelt_pdfpresenter_view_pdf_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_PDF(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_PDF, orgwesthoffsweltpdfpresenterViewPdf))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_PDF_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_PDF, orgwesthoffsweltpdfpresenterViewPdfClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_IS_PDF(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_PDF))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_IS_PDF_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_PDF))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_PDF_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_TYPE_PDF, orgwesthoffsweltpdfpresenterViewPdfClass))

typedef struct _orgwesthoffsweltpdfpresenterViewPdf orgwesthoffsweltpdfpresenterViewPdf;
typedef struct _orgwesthoffsweltpdfpresenterViewPdfClass orgwesthoffsweltpdfpresenterViewPdfClass;
typedef struct _orgwesthoffsweltpdfpresenterViewBehaviourBasePrivate orgwesthoffsweltpdfpresenterViewBehaviourBasePrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_TYPE_IMPLEMENTATION (org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_implementation_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_IMPLEMENTATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_TYPE_IMPLEMENTATION, orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementation))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_IMPLEMENTATION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_TYPE_IMPLEMENTATION, orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementationClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_IS_IMPLEMENTATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_TYPE_IMPLEMENTATION))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_IS_IMPLEMENTATION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_TYPE_IMPLEMENTATION))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_IMPLEMENTATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_PDF_LINK_TYPE_IMPLEMENTATION, orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementationClass))

typedef struct _orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementation orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementation;
typedef struct _orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementationClass orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementationClass;
typedef struct _orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementationPrivate orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementationPrivate;
typedef struct _orgwesthoffsweltpdfpresenterViewBasePrivate orgwesthoffsweltpdfpresenterViewBasePrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_BASE (org_westhoffswelt_pdfpresenter_renderer_base_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_BASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_BASE, orgwesthoffsweltpdfpresenterRendererBase))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_BASE, orgwesthoffsweltpdfpresenterRendererBaseClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_IS_BASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_BASE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_IS_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_BASE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_BASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_BASE, orgwesthoffsweltpdfpresenterRendererBaseClass))

typedef struct _orgwesthoffsweltpdfpresenterRendererBase orgwesthoffsweltpdfpresenterRendererBase;
typedef struct _orgwesthoffsweltpdfpresenterRendererBaseClass orgwesthoffsweltpdfpresenterRendererBaseClass;
typedef struct _orgwesthoffsweltpdfpresenterViewDefaultPrivate orgwesthoffsweltpdfpresenterViewDefaultPrivate;
typedef struct _orgwesthoffsweltpdfpresenterViewPdfPrivate orgwesthoffsweltpdfpresenterViewPdfPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_PDF (org_westhoffswelt_pdfpresenter_renderer_pdf_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_PDF(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_PDF, orgwesthoffsweltpdfpresenterRendererPdf))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_PDF_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_PDF, orgwesthoffsweltpdfpresenterRendererPdfClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_IS_PDF(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_PDF))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_IS_PDF_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_PDF))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_PDF_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_TYPE_PDF, orgwesthoffsweltpdfpresenterRendererPdfClass))

typedef struct _orgwesthoffsweltpdfpresenterRendererPdf orgwesthoffsweltpdfpresenterRendererPdf;
typedef struct _orgwesthoffsweltpdfpresenterRendererPdfClass orgwesthoffsweltpdfpresenterRendererPdfClass;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_TYPE_BASE (org_westhoffswelt_pdfpresenter_metadata_base_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_BASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_TYPE_BASE, orgwesthoffsweltpdfpresenterMetadataBase))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_TYPE_BASE, orgwesthoffsweltpdfpresenterMetadataBaseClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_IS_BASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_TYPE_BASE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_IS_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_TYPE_BASE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_BASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_TYPE_BASE, orgwesthoffsweltpdfpresenterMetadataBaseClass))

typedef struct _orgwesthoffsweltpdfpresenterMetadataBase orgwesthoffsweltpdfpresenterMetadataBase;
typedef struct _orgwesthoffsweltpdfpresenterMetadataBaseClass orgwesthoffsweltpdfpresenterMetadataBaseClass;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_TYPE_PDF (org_westhoffswelt_pdfpresenter_metadata_pdf_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_PDF(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_TYPE_PDF, orgwesthoffsweltpdfpresenterMetadataPdf))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_PDF_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_TYPE_PDF, orgwesthoffsweltpdfpresenterMetadataPdfClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_IS_PDF(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_TYPE_PDF))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_IS_PDF_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_TYPE_PDF))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_PDF_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_METADATA_TYPE_PDF, orgwesthoffsweltpdfpresenterMetadataPdfClass))

typedef struct _orgwesthoffsweltpdfpresenterMetadataPdf orgwesthoffsweltpdfpresenterMetadataPdf;
typedef struct _orgwesthoffsweltpdfpresenterMetadataPdfClass orgwesthoffsweltpdfpresenterMetadataPdfClass;
typedef struct _orgwesthoffsweltpdfpresenterPresentationControllerPrivate orgwesthoffsweltpdfpresenterPresentationControllerPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_OVERVIEW (org_westhoffswelt_pdfpresenter_window_overview_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_OVERVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_OVERVIEW, orgwesthoffsweltpdfpresenterWindowOverview))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_OVERVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_OVERVIEW, orgwesthoffsweltpdfpresenterWindowOverviewClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_IS_OVERVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_OVERVIEW))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_IS_OVERVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_OVERVIEW))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_OVERVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_OVERVIEW, orgwesthoffsweltpdfpresenterWindowOverviewClass))

typedef struct _orgwesthoffsweltpdfpresenterWindowOverview orgwesthoffsweltpdfpresenterWindowOverview;
typedef struct _orgwesthoffsweltpdfpresenterWindowOverviewClass orgwesthoffsweltpdfpresenterWindowOverviewClass;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_MUTEX_LOCKS (org_westhoffswelt_pdfpresenter_mutex_locks_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_MUTEX_LOCKS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_MUTEX_LOCKS, orgwesthoffsweltpdfpresenterMutexLocks))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_MUTEX_LOCKS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_MUTEX_LOCKS, orgwesthoffsweltpdfpresenterMutexLocksClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_MUTEX_LOCKS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_MUTEX_LOCKS))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_MUTEX_LOCKS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_MUTEX_LOCKS))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_MUTEX_LOCKS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_MUTEX_LOCKS, orgwesthoffsweltpdfpresenterMutexLocksClass))

typedef struct _orgwesthoffsweltpdfpresenterMutexLocks orgwesthoffsweltpdfpresenterMutexLocks;
typedef struct _orgwesthoffsweltpdfpresenterMutexLocksClass orgwesthoffsweltpdfpresenterMutexLocksClass;
typedef struct _orgwesthoffsweltpdfpresenterMutexLocksPrivate orgwesthoffsweltpdfpresenterMutexLocksPrivate;
typedef struct _orgwesthoffsweltpdfpresenterRendererBasePrivate orgwesthoffsweltpdfpresenterRendererBasePrivate;
typedef struct _orgwesthoffsweltpdfpresenterRendererPdfPrivate orgwesthoffsweltpdfpresenterRendererPdfPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_TYPE_OPTION_FACTORY (org_westhoffswelt_pdfpresenter_renderer_cache_option_factory_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_OPTION_FACTORY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_TYPE_OPTION_FACTORY, orgwesthoffsweltpdfpresenterRendererCacheOptionFactory))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_OPTION_FACTORY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_TYPE_OPTION_FACTORY, orgwesthoffsweltpdfpresenterRendererCacheOptionFactoryClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_IS_OPTION_FACTORY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_TYPE_OPTION_FACTORY))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_IS_OPTION_FACTORY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_TYPE_OPTION_FACTORY))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_OPTION_FACTORY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_TYPE_OPTION_FACTORY, orgwesthoffsweltpdfpresenterRendererCacheOptionFactoryClass))

typedef struct _orgwesthoffsweltpdfpresenterRendererCacheOptionFactory orgwesthoffsweltpdfpresenterRendererCacheOptionFactory;
typedef struct _orgwesthoffsweltpdfpresenterRendererCacheOptionFactoryClass orgwesthoffsweltpdfpresenterRendererCacheOptionFactoryClass;
typedef struct _orgwesthoffsweltpdfpresenterRendererCacheOptionFactoryPrivate orgwesthoffsweltpdfpresenterRendererCacheOptionFactoryPrivate;
typedef struct _orgwesthoffsweltpdfpresenterRendererCacheBasePrivate orgwesthoffsweltpdfpresenterRendererCacheBasePrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_SIMPLE_TYPE_ENGINE (org_westhoffswelt_pdfpresenter_renderer_cache_simple_engine_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_SIMPLE_ENGINE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_SIMPLE_TYPE_ENGINE, orgwesthoffsweltpdfpresenterRendererCacheSimpleEngine))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_SIMPLE_ENGINE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_SIMPLE_TYPE_ENGINE, orgwesthoffsweltpdfpresenterRendererCacheSimpleEngineClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_SIMPLE_IS_ENGINE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_SIMPLE_TYPE_ENGINE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_SIMPLE_IS_ENGINE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_SIMPLE_TYPE_ENGINE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_SIMPLE_ENGINE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_SIMPLE_TYPE_ENGINE, orgwesthoffsweltpdfpresenterRendererCacheSimpleEngineClass))

typedef struct _orgwesthoffsweltpdfpresenterRendererCacheSimpleEngine orgwesthoffsweltpdfpresenterRendererCacheSimpleEngine;
typedef struct _orgwesthoffsweltpdfpresenterRendererCacheSimpleEngineClass orgwesthoffsweltpdfpresenterRendererCacheSimpleEngineClass;
typedef struct _orgwesthoffsweltpdfpresenterRendererCacheSimpleEnginePrivate orgwesthoffsweltpdfpresenterRendererCacheSimpleEnginePrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_TYPE_ITEM (org_westhoffswelt_pdfpresenter_renderer_cache_png_item_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_TYPE_ITEM, orgwesthoffsweltpdfpresenterRendererCachePNGItem))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_TYPE_ITEM, orgwesthoffsweltpdfpresenterRendererCachePNGItemClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_IS_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_TYPE_ITEM))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_IS_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_TYPE_ITEM))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_TYPE_ITEM, orgwesthoffsweltpdfpresenterRendererCachePNGItemClass))

typedef struct _orgwesthoffsweltpdfpresenterRendererCachePNGItem orgwesthoffsweltpdfpresenterRendererCachePNGItem;
typedef struct _orgwesthoffsweltpdfpresenterRendererCachePNGItemClass orgwesthoffsweltpdfpresenterRendererCachePNGItemClass;
typedef struct _orgwesthoffsweltpdfpresenterRendererCachePNGItemPrivate orgwesthoffsweltpdfpresenterRendererCachePNGItemPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_TYPE_ENGINE (org_westhoffswelt_pdfpresenter_renderer_cache_png_engine_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_ENGINE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_TYPE_ENGINE, orgwesthoffsweltpdfpresenterRendererCachePNGEngine))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_ENGINE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_TYPE_ENGINE, orgwesthoffsweltpdfpresenterRendererCachePNGEngineClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_IS_ENGINE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_TYPE_ENGINE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_IS_ENGINE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_TYPE_ENGINE))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_ENGINE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_CACHE_PNG_TYPE_ENGINE, orgwesthoffsweltpdfpresenterRendererCachePNGEngineClass))

typedef struct _orgwesthoffsweltpdfpresenterRendererCachePNGEngine orgwesthoffsweltpdfpresenterRendererCachePNGEngine;
typedef struct _orgwesthoffsweltpdfpresenterRendererCachePNGEngineClass orgwesthoffsweltpdfpresenterRendererCachePNGEngineClass;
typedef struct _orgwesthoffsweltpdfpresenterRendererCachePNGEnginePrivate orgwesthoffsweltpdfpresenterRendererCachePNGEnginePrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_TIMER_LABEL (org_westhoffswelt_pdfpresenter_timer_label_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_TIMER_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_TIMER_LABEL, orgwesthoffsweltpdfpresenterTimerLabel))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_TIMER_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_TIMER_LABEL, orgwesthoffsweltpdfpresenterTimerLabelClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_TIMER_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_TIMER_LABEL))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_TIMER_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_TIMER_LABEL))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_TIMER_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_TIMER_LABEL, orgwesthoffsweltpdfpresenterTimerLabelClass))

typedef struct _orgwesthoffsweltpdfpresenterTimerLabel orgwesthoffsweltpdfpresenterTimerLabel;
typedef struct _orgwesthoffsweltpdfpresenterTimerLabelClass orgwesthoffsweltpdfpresenterTimerLabelClass;
typedef struct _orgwesthoffsweltpdfpresenterTimerLabelPrivate orgwesthoffsweltpdfpresenterTimerLabelPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_COUNTDOWN_TIMER (org_westhoffswelt_pdfpresenter_countdown_timer_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_COUNTDOWN_TIMER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_COUNTDOWN_TIMER, orgwesthoffsweltpdfpresenterCountdownTimer))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_COUNTDOWN_TIMER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_COUNTDOWN_TIMER, orgwesthoffsweltpdfpresenterCountdownTimerClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_COUNTDOWN_TIMER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_COUNTDOWN_TIMER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_COUNTDOWN_TIMER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_COUNTDOWN_TIMER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_COUNTDOWN_TIMER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_COUNTDOWN_TIMER, orgwesthoffsweltpdfpresenterCountdownTimerClass))

typedef struct _orgwesthoffsweltpdfpresenterCountdownTimer orgwesthoffsweltpdfpresenterCountdownTimer;
typedef struct _orgwesthoffsweltpdfpresenterCountdownTimerClass orgwesthoffsweltpdfpresenterCountdownTimerClass;
typedef struct _orgwesthoffsweltpdfpresenterCountdownTimerPrivate orgwesthoffsweltpdfpresenterCountdownTimerPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_END_TIME_TIMER (org_westhoffswelt_pdfpresenter_end_time_timer_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_END_TIME_TIMER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_END_TIME_TIMER, orgwesthoffsweltpdfpresenterEndTimeTimer))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_END_TIME_TIMER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_END_TIME_TIMER, orgwesthoffsweltpdfpresenterEndTimeTimerClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_END_TIME_TIMER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_END_TIME_TIMER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_END_TIME_TIMER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_END_TIME_TIMER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_END_TIME_TIMER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_END_TIME_TIMER, orgwesthoffsweltpdfpresenterEndTimeTimerClass))

typedef struct _orgwesthoffsweltpdfpresenterEndTimeTimer orgwesthoffsweltpdfpresenterEndTimeTimer;
typedef struct _orgwesthoffsweltpdfpresenterEndTimeTimerClass orgwesthoffsweltpdfpresenterEndTimeTimerClass;
typedef struct _orgwesthoffsweltpdfpresenterEndTimeTimerPrivate orgwesthoffsweltpdfpresenterEndTimeTimerPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_COUNTUP_TIMER (org_westhoffswelt_pdfpresenter_countup_timer_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_COUNTUP_TIMER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_COUNTUP_TIMER, orgwesthoffsweltpdfpresenterCountupTimer))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_COUNTUP_TIMER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_COUNTUP_TIMER, orgwesthoffsweltpdfpresenterCountupTimerClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_COUNTUP_TIMER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_COUNTUP_TIMER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_COUNTUP_TIMER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_COUNTUP_TIMER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_COUNTUP_TIMER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_COUNTUP_TIMER, orgwesthoffsweltpdfpresenterCountupTimerClass))

typedef struct _orgwesthoffsweltpdfpresenterCountupTimer orgwesthoffsweltpdfpresenterCountupTimer;
typedef struct _orgwesthoffsweltpdfpresenterCountupTimerClass orgwesthoffsweltpdfpresenterCountupTimerClass;
typedef struct _orgwesthoffsweltpdfpresenterCountupTimerPrivate orgwesthoffsweltpdfpresenterCountupTimerPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_OPTIONS (org_westhoffswelt_pdfpresenter_options_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_OPTIONS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_OPTIONS, orgwesthoffsweltpdfpresenterOptions))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_OPTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_OPTIONS, orgwesthoffsweltpdfpresenterOptionsClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_OPTIONS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_OPTIONS))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_OPTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_OPTIONS))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_OPTIONS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_OPTIONS, orgwesthoffsweltpdfpresenterOptionsClass))

typedef struct _orgwesthoffsweltpdfpresenterOptions orgwesthoffsweltpdfpresenterOptions;
typedef struct _orgwesthoffsweltpdfpresenterOptionsClass orgwesthoffsweltpdfpresenterOptionsClass;
typedef struct _orgwesthoffsweltpdfpresenterOptionsPrivate orgwesthoffsweltpdfpresenterOptionsPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_CACHE_STATUS (org_westhoffswelt_pdfpresenter_cache_status_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_CACHE_STATUS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_CACHE_STATUS, orgwesthoffsweltpdfpresenterCacheStatus))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_CACHE_STATUS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_CACHE_STATUS, orgwesthoffsweltpdfpresenterCacheStatusClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_CACHE_STATUS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_CACHE_STATUS))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_CACHE_STATUS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_CACHE_STATUS))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_CACHE_STATUS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_CACHE_STATUS, orgwesthoffsweltpdfpresenterCacheStatusClass))

typedef struct _orgwesthoffsweltpdfpresenterCacheStatus orgwesthoffsweltpdfpresenterCacheStatus;
typedef struct _orgwesthoffsweltpdfpresenterCacheStatusClass orgwesthoffsweltpdfpresenterCacheStatusClass;
typedef struct _orgwesthoffsweltpdfpresenterCacheStatusPrivate orgwesthoffsweltpdfpresenterCacheStatusPrivate;
typedef struct _orgwesthoffsweltpdfpresenterWindowOverviewPrivate orgwesthoffsweltpdfpresenterWindowOverviewPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_FULLSCREEN (org_westhoffswelt_pdfpresenter_window_fullscreen_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_FULLSCREEN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_FULLSCREEN, orgwesthoffsweltpdfpresenterWindowFullscreen))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_FULLSCREEN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_FULLSCREEN, orgwesthoffsweltpdfpresenterWindowFullscreenClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_IS_FULLSCREEN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_FULLSCREEN))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_IS_FULLSCREEN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_FULLSCREEN))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_FULLSCREEN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_FULLSCREEN, orgwesthoffsweltpdfpresenterWindowFullscreenClass))

typedef struct _orgwesthoffsweltpdfpresenterWindowFullscreen orgwesthoffsweltpdfpresenterWindowFullscreen;
typedef struct _orgwesthoffsweltpdfpresenterWindowFullscreenClass orgwesthoffsweltpdfpresenterWindowFullscreenClass;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_PRESENTER (org_westhoffswelt_pdfpresenter_window_presenter_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_PRESENTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_PRESENTER, orgwesthoffsweltpdfpresenterWindowPresenter))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_PRESENTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_PRESENTER, orgwesthoffsweltpdfpresenterWindowPresenterClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_IS_PRESENTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_PRESENTER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_IS_PRESENTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_PRESENTER))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_PRESENTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_PRESENTER, orgwesthoffsweltpdfpresenterWindowPresenterClass))

typedef struct _orgwesthoffsweltpdfpresenterWindowPresenter orgwesthoffsweltpdfpresenterWindowPresenter;
typedef struct _orgwesthoffsweltpdfpresenterWindowPresenterClass orgwesthoffsweltpdfpresenterWindowPresenterClass;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_OVERVIEW_BUTTON (org_westhoffswelt_pdfpresenter_window_overview_button_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_OVERVIEW_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_OVERVIEW_BUTTON, orgwesthoffsweltpdfpresenterWindowOverviewButton))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_OVERVIEW_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_OVERVIEW_BUTTON, orgwesthoffsweltpdfpresenterWindowOverviewButtonClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_IS_OVERVIEW_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_OVERVIEW_BUTTON))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_IS_OVERVIEW_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_OVERVIEW_BUTTON))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_OVERVIEW_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_OVERVIEW_BUTTON, orgwesthoffsweltpdfpresenterWindowOverviewButtonClass))

typedef struct _orgwesthoffsweltpdfpresenterWindowOverviewButton orgwesthoffsweltpdfpresenterWindowOverviewButton;
typedef struct _orgwesthoffsweltpdfpresenterWindowOverviewButtonClass orgwesthoffsweltpdfpresenterWindowOverviewButtonClass;
typedef struct _orgwesthoffsweltpdfpresenterWindowOverviewButtonPrivate orgwesthoffsweltpdfpresenterWindowOverviewButtonPrivate;
typedef struct _orgwesthoffsweltpdfpresenterWindowFullscreenPrivate orgwesthoffsweltpdfpresenterWindowFullscreenPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_PRESENTATION (org_westhoffswelt_pdfpresenter_window_presentation_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_PRESENTATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_PRESENTATION, orgwesthoffsweltpdfpresenterWindowPresentation))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_PRESENTATION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_PRESENTATION, orgwesthoffsweltpdfpresenterWindowPresentationClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_IS_PRESENTATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_PRESENTATION))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_IS_PRESENTATION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_PRESENTATION))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_PRESENTATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_WINDOW_TYPE_PRESENTATION, orgwesthoffsweltpdfpresenterWindowPresentationClass))

typedef struct _orgwesthoffsweltpdfpresenterWindowPresentation orgwesthoffsweltpdfpresenterWindowPresentation;
typedef struct _orgwesthoffsweltpdfpresenterWindowPresentationClass orgwesthoffsweltpdfpresenterWindowPresentationClass;
typedef struct _orgwesthoffsweltpdfpresenterWindowPresentationPrivate orgwesthoffsweltpdfpresenterWindowPresentationPrivate;
typedef struct _orgwesthoffsweltpdfpresenterWindowPresenterPrivate orgwesthoffsweltpdfpresenterWindowPresenterPrivate;
typedef struct _orgwesthoffsweltpdfpresenterMetadataBasePrivate orgwesthoffsweltpdfpresenterMetadataBasePrivate;
typedef struct _orgwesthoffsweltpdfpresenterMetadataPdfPrivate orgwesthoffsweltpdfpresenterMetadataPdfPrivate;

#define ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_SLIDES_NOTES (org_westhoffswelt_pdfpresenter_slides_notes_get_type ())
#define ORG_WESTHOFFSWELT_PDFPRESENTER_SLIDES_NOTES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_SLIDES_NOTES, orgwesthoffsweltpdfpresenterslides_notes))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_SLIDES_NOTES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_SLIDES_NOTES, orgwesthoffsweltpdfpresenterslides_notesClass))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_SLIDES_NOTES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_SLIDES_NOTES))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_IS_SLIDES_NOTES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_SLIDES_NOTES))
#define ORG_WESTHOFFSWELT_PDFPRESENTER_SLIDES_NOTES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ORG_WESTHOFFSWELT_PDFPRESENTER_TYPE_SLIDES_NOTES, orgwesthoffsweltpdfpresenterslides_notesClass))

typedef struct _orgwesthoffsweltpdfpresenterslides_notes orgwesthoffsweltpdfpresenterslides_notes;
typedef struct _orgwesthoffsweltpdfpresenterslides_notesClass orgwesthoffsweltpdfpresenterslides_notesClass;
typedef struct _orgwesthoffsweltpdfpresenterslides_notesPrivate orgwesthoffsweltpdfpresenterslides_notesPrivate;

struct _orgwesthoffsweltpdfpresenterViewBehaviourDecoratableIface {
	GTypeInterface parent_iface;
	void (*associate_behaviour) (orgwesthoffsweltpdfpresenterViewBehaviourDecoratable* self, orgwesthoffsweltpdfpresenterViewBehaviourBase* behaviour);
};

struct _orgwesthoffsweltpdfpresenterViewPrerenderingIface {
	GTypeInterface parent_iface;
};

struct _orgwesthoffsweltpdfpresenterControllableIface {
	GTypeInterface parent_iface;
	orgwesthoffsweltpdfpresenterPresentationController* (*get_controller) (orgwesthoffsweltpdfpresenterControllable* self);
	void (*update) (orgwesthoffsweltpdfpresenterControllable* self);
	void (*edit_note) (orgwesthoffsweltpdfpresenterControllable* self);
	void (*ask_goto_page) (orgwesthoffsweltpdfpresenterControllable* self);
	void (*toggle_pause) (orgwesthoffsweltpdfpresenterControllable* self);
	void (*reset_timer) (orgwesthoffsweltpdfpresenterControllable* self);
	void (*show_overview) (orgwesthoffsweltpdfpresenterControllable* self);
	void (*hide_overview) (orgwesthoffsweltpdfpresenterControllable* self);
};

struct _orgwesthoffsweltpdfpresenterRendererCachingIface {
	GTypeInterface parent_iface;
	void (*set_cache) (orgwesthoffsweltpdfpresenterRendererCaching* self, orgwesthoffsweltpdfpresenterRendererCacheBase* cache);
	orgwesthoffsweltpdfpresenterRendererCacheBase* (*get_cache) (orgwesthoffsweltpdfpresenterRendererCaching* self);
};

struct _orgwesthoffsweltpdfpresenterApplication {
	GObject parent_instance;
	orgwesthoffsweltpdfpresenterApplicationPrivate * priv;
};

struct _orgwesthoffsweltpdfpresenterApplicationClass {
	GObjectClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterScaler {
	GObject parent_instance;
	orgwesthoffsweltpdfpresenterScalerPrivate * priv;
	gdouble initial_width;
	gdouble initial_height;
};

struct _orgwesthoffsweltpdfpresenterScalerClass {
	GObjectClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider {
	GObject parent_instance;
	orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProviderPrivate * priv;
	orgwesthoffsweltpdfpresenterViewPdf* target;
	PopplerLinkMapping* active_mapping;
	GList* page_link_mappings;
	GdkRectangle* precalculated_mapping_rectangles;
	gint precalculated_mapping_rectangles_length1;
};

struct _orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProviderClass {
	GObjectClass parent_class;
};

typedef enum  {
	ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_ASSOCIATION_ERROR_BEHAVIOUR_ALREADY_ASSOCIATED,
	ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_ASSOCIATION_ERROR_VIEW_NOT_SUPPORTED
} orgwesthoffsweltpdfpresenterViewBehaviourAssociationError;
#define ORG_WESTHOFFSWELT_PDFPRESENTER_VIEW_BEHAVIOUR_ASSOCIATION_ERROR org_westhoffswelt_pdfpresenter_view_behaviour_association_error_quark ()
struct _orgwesthoffsweltpdfpresenterViewBehaviourBase {
	GObject parent_instance;
	orgwesthoffsweltpdfpresenterViewBehaviourBasePrivate * priv;
	orgwesthoffsweltpdfpresenterViewBase* target;
};

struct _orgwesthoffsweltpdfpresenterViewBehaviourBaseClass {
	GObjectClass parent_class;
	void (*associate) (orgwesthoffsweltpdfpresenterViewBehaviourBase* self, orgwesthoffsweltpdfpresenterViewBase* target, GError** error);
};

struct _orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementation {
	orgwesthoffsweltpdfpresenterViewBehaviourBase parent_instance;
	orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementationPrivate * priv;
	orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider* signal_provider;
	orgwesthoffsweltpdfpresenterPresentationController* presentation_controller;
};

struct _orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementationClass {
	orgwesthoffsweltpdfpresenterViewBehaviourBaseClass parent_class;
};

typedef enum  {
	ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_RENDER_ERROR_SLIDE_DOES_NOT_EXIST
} orgwesthoffsweltpdfpresenterRendererRenderError;
#define ORG_WESTHOFFSWELT_PDFPRESENTER_RENDERER_RENDER_ERROR org_westhoffswelt_pdfpresenter_renderer_render_error_quark ()
struct _orgwesthoffsweltpdfpresenterViewBase {
	GtkDrawingArea parent_instance;
	orgwesthoffsweltpdfpresenterViewBasePrivate * priv;
	orgwesthoffsweltpdfpresenterRendererBase* renderer;
};

struct _orgwesthoffsweltpdfpresenterViewBaseClass {
	GtkDrawingAreaClass parent_class;
	void (*display) (orgwesthoffsweltpdfpresenterViewBase* self, gint slide_number, gboolean force_redraw, GError** error);
	void (*fade_to_black) (orgwesthoffsweltpdfpresenterViewBase* self);
	void (*redraw) (orgwesthoffsweltpdfpresenterViewBase* self, GError** error);
	gint (*get_current_slide_number) (orgwesthoffsweltpdfpresenterViewBase* self);
};

struct _orgwesthoffsweltpdfpresenterViewDefault {
	orgwesthoffsweltpdfpresenterViewBase parent_instance;
	orgwesthoffsweltpdfpresenterViewDefaultPrivate * priv;
	gint current_slide_number;
	GdkPixmap* current_slide;
	gint n_slides;
	gint slide_limit;
	GList* behaviours;
};

struct _orgwesthoffsweltpdfpresenterViewDefaultClass {
	orgwesthoffsweltpdfpresenterViewBaseClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterViewPdf {
	orgwesthoffsweltpdfpresenterViewDefault parent_instance;
	orgwesthoffsweltpdfpresenterViewPdfPrivate * priv;
};

struct _orgwesthoffsweltpdfpresenterViewPdfClass {
	orgwesthoffsweltpdfpresenterViewDefaultClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterPresentationController {
	GObject parent_instance;
	orgwesthoffsweltpdfpresenterPresentationControllerPrivate * priv;
	gint current_slide_number;
	gint current_user_slide_number;
	gboolean faded_to_black;
	gboolean frozen;
	gboolean black_on_end;
	gint n_slides;
	GList* controllables;
	gboolean ignore_keyboard_events;
	gboolean ignore_mouse_events;
	orgwesthoffsweltpdfpresenterMetadataPdf* metadata;
	orgwesthoffsweltpdfpresenterWindowOverview* overview;
	guint last_key_event;
};

struct _orgwesthoffsweltpdfpresenterPresentationControllerClass {
	GObjectClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterMutexLocks {
	GObject parent_instance;
	orgwesthoffsweltpdfpresenterMutexLocksPrivate * priv;
};

struct _orgwesthoffsweltpdfpresenterMutexLocksClass {
	GObjectClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterRendererBase {
	GObject parent_instance;
	orgwesthoffsweltpdfpresenterRendererBasePrivate * priv;
	orgwesthoffsweltpdfpresenterMetadataBase* metadata;
	gint width;
	gint height;
};

struct _orgwesthoffsweltpdfpresenterRendererBaseClass {
	GObjectClass parent_class;
	GdkPixmap* (*render_to_pixmap) (orgwesthoffsweltpdfpresenterRendererBase* self, gint slide_number, GError** error);
	GdkPixmap* (*fade_to_black) (orgwesthoffsweltpdfpresenterRendererBase* self);
};

struct _orgwesthoffsweltpdfpresenterRendererPdf {
	orgwesthoffsweltpdfpresenterRendererBase parent_instance;
	orgwesthoffsweltpdfpresenterRendererPdfPrivate * priv;
	gdouble scaling_factor;
	orgwesthoffsweltpdfpresenterRendererCacheBase* cache;
};

struct _orgwesthoffsweltpdfpresenterRendererPdfClass {
	orgwesthoffsweltpdfpresenterRendererBaseClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterRendererCacheOptionFactory {
	GObject parent_instance;
	orgwesthoffsweltpdfpresenterRendererCacheOptionFactoryPrivate * priv;
};

struct _orgwesthoffsweltpdfpresenterRendererCacheOptionFactoryClass {
	GObjectClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterRendererCacheBase {
	GObject parent_instance;
	orgwesthoffsweltpdfpresenterRendererCacheBasePrivate * priv;
	orgwesthoffsweltpdfpresenterMetadataBase* metadata;
};

struct _orgwesthoffsweltpdfpresenterRendererCacheBaseClass {
	GObjectClass parent_class;
	void (*store) (orgwesthoffsweltpdfpresenterRendererCacheBase* self, guint index, GdkPixmap* pixmap);
	GdkPixmap* (*retrieve) (orgwesthoffsweltpdfpresenterRendererCacheBase* self, guint index);
};

struct _orgwesthoffsweltpdfpresenterRendererCacheSimpleEngine {
	orgwesthoffsweltpdfpresenterRendererCacheBase parent_instance;
	orgwesthoffsweltpdfpresenterRendererCacheSimpleEnginePrivate * priv;
	GdkPixmap** storage;
	gint storage_length1;
	GMutex* mutex;
};

struct _orgwesthoffsweltpdfpresenterRendererCacheSimpleEngineClass {
	orgwesthoffsweltpdfpresenterRendererCacheBaseClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterRendererCachePNGItem {
	GObject parent_instance;
	orgwesthoffsweltpdfpresenterRendererCachePNGItemPrivate * priv;
	guint8* data;
	gint data_length1;
};

struct _orgwesthoffsweltpdfpresenterRendererCachePNGItemClass {
	GObjectClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterRendererCachePNGEngine {
	orgwesthoffsweltpdfpresenterRendererCacheBase parent_instance;
	orgwesthoffsweltpdfpresenterRendererCachePNGEnginePrivate * priv;
	orgwesthoffsweltpdfpresenterRendererCachePNGItem** storage;
	gint storage_length1;
	GMutex* mutex;
};

struct _orgwesthoffsweltpdfpresenterRendererCachePNGEngineClass {
	orgwesthoffsweltpdfpresenterRendererCacheBaseClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterTimerLabel {
	GtkLabel parent_instance;
	orgwesthoffsweltpdfpresenterTimerLabelPrivate * priv;
	gint time;
	time_t start_time;
	guint timeout;
	GdkColor normal_color;
	GdkColor pretalk_color;
};

struct _orgwesthoffsweltpdfpresenterTimerLabelClass {
	GtkLabelClass parent_class;
	void (*start) (orgwesthoffsweltpdfpresenterTimerLabel* self);
	void (*stop) (orgwesthoffsweltpdfpresenterTimerLabel* self);
	void (*reset) (orgwesthoffsweltpdfpresenterTimerLabel* self);
	gboolean (*on_timeout) (orgwesthoffsweltpdfpresenterTimerLabel* self);
	void (*format_time) (orgwesthoffsweltpdfpresenterTimerLabel* self);
};

struct _orgwesthoffsweltpdfpresenterCountdownTimer {
	orgwesthoffsweltpdfpresenterTimerLabel parent_instance;
	orgwesthoffsweltpdfpresenterCountdownTimerPrivate * priv;
	gint duration;
	guint last_minutes;
	GdkColor last_minutes_color;
	GdkColor negative_color;
};

struct _orgwesthoffsweltpdfpresenterCountdownTimerClass {
	orgwesthoffsweltpdfpresenterTimerLabelClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterEndTimeTimer {
	orgwesthoffsweltpdfpresenterCountdownTimer parent_instance;
	orgwesthoffsweltpdfpresenterEndTimeTimerPrivate * priv;
	time_t end_time;
	struct tm end_time_object;
};

struct _orgwesthoffsweltpdfpresenterEndTimeTimerClass {
	orgwesthoffsweltpdfpresenterCountdownTimerClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterCountupTimer {
	orgwesthoffsweltpdfpresenterTimerLabel parent_instance;
	orgwesthoffsweltpdfpresenterCountupTimerPrivate * priv;
};

struct _orgwesthoffsweltpdfpresenterCountupTimerClass {
	orgwesthoffsweltpdfpresenterTimerLabelClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterOptions {
	GObject parent_instance;
	orgwesthoffsweltpdfpresenterOptionsPrivate * priv;
};

struct _orgwesthoffsweltpdfpresenterOptionsClass {
	GObjectClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterCacheStatus {
	GTypeInstance parent_instance;
	volatile int ref_count;
	orgwesthoffsweltpdfpresenterCacheStatusPrivate * priv;
	gint current_value;
	gint max_value;
};

struct _orgwesthoffsweltpdfpresenterCacheStatusClass {
	GTypeClass parent_class;
	void (*finalize) (orgwesthoffsweltpdfpresenterCacheStatus *self);
};

typedef void (*orgwesthoffsweltpdfpresenterCacheStatusUpdateFunction) (gdouble progress, void* user_data);
typedef void (*orgwesthoffsweltpdfpresenterCacheStatusUpdateComplete) (void* user_data);
struct _orgwesthoffsweltpdfpresenterWindowOverview {
	GtkScrolledWindow parent_instance;
	orgwesthoffsweltpdfpresenterWindowOverviewPrivate * priv;
	orgwesthoffsweltpdfpresenterMetadataPdf* metadata;
	gint n_slides;
	gint xdimension;
	gint buttonWidth;
	gint buttonHeight;
	gint pixmapWidth;
	gint pixmapHeight;
	gint targetWidth;
	gint targetHeight;
	gint currently_selected;
	gboolean shown;
	gboolean structure_done;
	gint next_undone_preview;
	orgwesthoffsweltpdfpresenterRendererCacheBase* cache;
	orgwesthoffsweltpdfpresenterPresentationController* presentation_controller;
	orgwesthoffsweltpdfpresenterWindowPresenter* presenter;
};

struct _orgwesthoffsweltpdfpresenterWindowOverviewClass {
	GtkScrolledWindowClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterWindowOverviewButton {
	GtkButton parent_instance;
	orgwesthoffsweltpdfpresenterWindowOverviewButtonPrivate * priv;
	gint id;
};

struct _orgwesthoffsweltpdfpresenterWindowOverviewButtonClass {
	GtkButtonClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterWindowFullscreen {
	GtkWindow parent_instance;
	orgwesthoffsweltpdfpresenterWindowFullscreenPrivate * priv;
	GdkRectangle screen_geometry;
	guint hide_cursor_timeout;
	gboolean faded_to_black;
	gboolean frozen;
};

struct _orgwesthoffsweltpdfpresenterWindowFullscreenClass {
	GtkWindowClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterWindowPresentation {
	orgwesthoffsweltpdfpresenterWindowFullscreen parent_instance;
	orgwesthoffsweltpdfpresenterWindowPresentationPrivate * priv;
	orgwesthoffsweltpdfpresenterPresentationController* presentation_controller;
	orgwesthoffsweltpdfpresenterViewBase* view;
};

struct _orgwesthoffsweltpdfpresenterWindowPresentationClass {
	orgwesthoffsweltpdfpresenterWindowFullscreenClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterWindowPresenter {
	orgwesthoffsweltpdfpresenterWindowFullscreen parent_instance;
	orgwesthoffsweltpdfpresenterWindowPresenterPrivate * priv;
	orgwesthoffsweltpdfpresenterPresentationController* presentation_controller;
	orgwesthoffsweltpdfpresenterViewBase* current_view;
	orgwesthoffsweltpdfpresenterViewBase* next_view;
	orgwesthoffsweltpdfpresenterViewBase* strict_next_view;
	orgwesthoffsweltpdfpresenterViewBase* strict_prev_view;
	orgwesthoffsweltpdfpresenterTimerLabel* timer;
	gboolean timer_paused;
	GtkEntry* slide_progress;
	GtkProgressBar* prerender_progress;
	GtkImage* blank_icon;
	GtkImage* frozen_icon;
	GtkImage* pause_icon;
	GtkTextView* notes_view;
	GtkVBox* fullLayout;
	GtkHBox* slideViews;
	orgwesthoffsweltpdfpresenterWindowOverview* overview;
	guint slide_count;
	orgwesthoffsweltpdfpresenterMetadataPdf* metadata;
	GdkColor black;
	GdkColor white;
};

struct _orgwesthoffsweltpdfpresenterWindowPresenterClass {
	orgwesthoffsweltpdfpresenterWindowFullscreenClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterMetadataBase {
	GObject parent_instance;
	orgwesthoffsweltpdfpresenterMetadataBasePrivate * priv;
	gchar* fname;
	gchar* url;
};

struct _orgwesthoffsweltpdfpresenterMetadataBaseClass {
	GObjectClass parent_class;
	guint (*get_slide_count) (orgwesthoffsweltpdfpresenterMetadataBase* self);
};

struct _orgwesthoffsweltpdfpresenterMetadataPdf {
	orgwesthoffsweltpdfpresenterMetadataBase parent_instance;
	orgwesthoffsweltpdfpresenterMetadataPdfPrivate * priv;
	gchar* pdf_fname;
	gchar* pdf_url;
	gchar* pdfpc_url;
	PopplerDocument* document;
	gdouble page_width;
	gdouble page_height;
	guint page_count;
	orgwesthoffsweltpdfpresenterslides_notes* notes;
	gboolean skips_by_user;
	guint duration;
};

struct _orgwesthoffsweltpdfpresenterMetadataPdfClass {
	orgwesthoffsweltpdfpresenterMetadataBaseClass parent_class;
};

struct _orgwesthoffsweltpdfpresenterslides_notes {
	GObject parent_instance;
	orgwesthoffsweltpdfpresenterslides_notesPrivate * priv;
	gchar** notes;
	gint notes_length1;
};

struct _orgwesthoffsweltpdfpresenterslides_notesClass {
	GObjectClass parent_class;
};


GType org_westhoffswelt_pdfpresenter_view_behaviour_base_get_type (void) G_GNUC_CONST;
GType org_westhoffswelt_pdfpresenter_view_behaviour_decoratable_get_type (void) G_GNUC_CONST;
void org_westhoffswelt_pdfpresenter_view_behaviour_decoratable_associate_behaviour (orgwesthoffsweltpdfpresenterViewBehaviourDecoratable* self, orgwesthoffsweltpdfpresenterViewBehaviourBase* behaviour);
GType org_westhoffswelt_pdfpresenter_view_prerendering_get_type (void) G_GNUC_CONST;
GType org_westhoffswelt_pdfpresenter_presentation_controller_get_type (void) G_GNUC_CONST;
GType org_westhoffswelt_pdfpresenter_controllable_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterPresentationController* org_westhoffswelt_pdfpresenter_controllable_get_controller (orgwesthoffsweltpdfpresenterControllable* self);
void org_westhoffswelt_pdfpresenter_controllable_update (orgwesthoffsweltpdfpresenterControllable* self);
void org_westhoffswelt_pdfpresenter_controllable_edit_note (orgwesthoffsweltpdfpresenterControllable* self);
void org_westhoffswelt_pdfpresenter_controllable_ask_goto_page (orgwesthoffsweltpdfpresenterControllable* self);
void org_westhoffswelt_pdfpresenter_controllable_toggle_pause (orgwesthoffsweltpdfpresenterControllable* self);
void org_westhoffswelt_pdfpresenter_controllable_reset_timer (orgwesthoffsweltpdfpresenterControllable* self);
void org_westhoffswelt_pdfpresenter_controllable_show_overview (orgwesthoffsweltpdfpresenterControllable* self);
void org_westhoffswelt_pdfpresenter_controllable_hide_overview (orgwesthoffsweltpdfpresenterControllable* self);
GType org_westhoffswelt_pdfpresenter_renderer_cache_base_get_type (void) G_GNUC_CONST;
GType org_westhoffswelt_pdfpresenter_renderer_caching_get_type (void) G_GNUC_CONST;
void org_westhoffswelt_pdfpresenter_renderer_caching_set_cache (orgwesthoffsweltpdfpresenterRendererCaching* self, orgwesthoffsweltpdfpresenterRendererCacheBase* cache);
orgwesthoffsweltpdfpresenterRendererCacheBase* org_westhoffswelt_pdfpresenter_renderer_caching_get_cache (orgwesthoffsweltpdfpresenterRendererCaching* self);
GType org_westhoffswelt_pdfpresenter_application_get_type (void) G_GNUC_CONST;
void org_westhoffswelt_pdfpresenter_application_parse_command_line_options (orgwesthoffsweltpdfpresenterApplication* self, gchar** args, int args_length1);
void org_westhoffswelt_pdfpresenter_application_run (orgwesthoffsweltpdfpresenterApplication* self, gchar** args, int args_length1);
gint org_westhoffswelt_pdfpresenter_application_main (gchar** args, int args_length1);
orgwesthoffsweltpdfpresenterApplication* org_westhoffswelt_pdfpresenter_application_new (void);
orgwesthoffsweltpdfpresenterApplication* org_westhoffswelt_pdfpresenter_application_construct (GType object_type);
GType org_westhoffswelt_pdfpresenter_scaler_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterScaler* org_westhoffswelt_pdfpresenter_scaler_new (gdouble width, gdouble height);
orgwesthoffsweltpdfpresenterScaler* org_westhoffswelt_pdfpresenter_scaler_construct (GType object_type, gdouble width, gdouble height);
void org_westhoffswelt_pdfpresenter_scaler_scale_to (orgwesthoffsweltpdfpresenterScaler* self, gint width, gint height, gboolean centered, gboolean allow_cutoff, GdkRectangle* result);
GType org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_signal_provider_get_type (void) G_GNUC_CONST;
GType org_westhoffswelt_pdfpresenter_view_base_get_type (void) G_GNUC_CONST;
GType org_westhoffswelt_pdfpresenter_view_default_get_type (void) G_GNUC_CONST;
GType org_westhoffswelt_pdfpresenter_view_pdf_get_type (void) G_GNUC_CONST;
void org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_signal_provider_attach (orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider* self, orgwesthoffsweltpdfpresenterViewPdf* view);
PopplerLinkMapping* org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_signal_provider_get_link_mapping_by_coordinates (orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider* self, gdouble x, gdouble y);
void org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_signal_provider_handle_link_mapping (orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider* self, PopplerLinkMapping* mapping);
void org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_signal_provider_convert_poppler_rectangle_to_gdk_rectangle (orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider* self, PopplerRectangle* poppler_rectangle, GdkRectangle* result);
gboolean org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_signal_provider_on_button_press (orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider* self, GtkWidget* source, GdkEventButton* e);
gboolean org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_signal_provider_on_mouse_move (orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider* self, GtkWidget* source, GdkEventMotion* event);
void org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_signal_provider_on_entering_slide (orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider* self, orgwesthoffsweltpdfpresenterViewBase* source, gint page_number);
void org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_signal_provider_on_leaving_slide (orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider* self, orgwesthoffsweltpdfpresenterViewBase* source, gint from, gint to);
orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider* org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_signal_provider_new (void);
orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkSignalProvider* org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_signal_provider_construct (GType object_type);
GQuark org_westhoffswelt_pdfpresenter_view_behaviour_association_error_quark (void);
GType org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_implementation_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementation* org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_implementation_new (orgwesthoffsweltpdfpresenterPresentationController* presentation_controller);
orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementation* org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_implementation_construct (GType object_type, orgwesthoffsweltpdfpresenterPresentationController* presentation_controller);
gboolean org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_implementation_is_supported (orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementation* self, orgwesthoffsweltpdfpresenterViewBase* target);
void org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_implementation_on_link_mouse_enter (orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementation* self, GdkRectangle* link_rect, PopplerLinkMapping* mapping);
void org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_implementation_on_link_mouse_leave (orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementation* self, GdkRectangle* link_rect, PopplerLinkMapping* mapping);
void org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_implementation_on_clicked_internal_link (orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementation* self, GdkRectangle* link_rect, guint source_page_number, guint target_page_number);
void org_westhoffswelt_pdfpresenter_view_behaviour_pdf_link_implementation_on_clicked_external_command (orgwesthoffsweltpdfpresenterViewBehaviourPdfLinkImplementation* self, GdkRectangle* link_rect, guint source_page_number, const gchar* command, const gchar* arguments);
orgwesthoffsweltpdfpresenterViewBehaviourBase* org_westhoffswelt_pdfpresenter_view_behaviour_base_construct (GType object_type);
orgwesthoffsweltpdfpresenterViewBase* org_westhoffswelt_pdfpresenter_view_behaviour_base_get_target (orgwesthoffsweltpdfpresenterViewBehaviourBase* self);
void org_westhoffswelt_pdfpresenter_view_behaviour_base_enforce_exclusive_association (orgwesthoffsweltpdfpresenterViewBehaviourBase* self, orgwesthoffsweltpdfpresenterViewBase* target, GError** error);
void org_westhoffswelt_pdfpresenter_view_behaviour_base_associate (orgwesthoffsweltpdfpresenterViewBehaviourBase* self, orgwesthoffsweltpdfpresenterViewBase* target, GError** error);
gboolean org_westhoffswelt_pdfpresenter_view_behaviour_base_is_supported (orgwesthoffsweltpdfpresenterViewBehaviourBase* self, orgwesthoffsweltpdfpresenterViewBase* target);
GQuark org_westhoffswelt_pdfpresenter_renderer_render_error_quark (void);
GType org_westhoffswelt_pdfpresenter_renderer_base_get_type (void) G_GNUC_CONST;
GType org_westhoffswelt_pdfpresenter_renderer_pdf_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterViewPdf* org_westhoffswelt_pdfpresenter_view_pdf_new (orgwesthoffsweltpdfpresenterRendererPdf* renderer, gboolean allow_black_on_end, orgwesthoffsweltpdfpresenterPresentationController* presentation_controller);
orgwesthoffsweltpdfpresenterViewPdf* org_westhoffswelt_pdfpresenter_view_pdf_construct (GType object_type, orgwesthoffsweltpdfpresenterRendererPdf* renderer, gboolean allow_black_on_end, orgwesthoffsweltpdfpresenterPresentationController* presentation_controller);
GType org_westhoffswelt_pdfpresenter_metadata_base_get_type (void) G_GNUC_CONST;
GType org_westhoffswelt_pdfpresenter_metadata_pdf_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterViewPdf* org_westhoffswelt_pdfpresenter_view_pdf_from_metadata (orgwesthoffsweltpdfpresenterMetadataPdf* metadata, gint width, gint height, gboolean allow_black_on_end, orgwesthoffsweltpdfpresenterPresentationController* presentation_controller, GdkRectangle* scale_rect);
orgwesthoffsweltpdfpresenterRendererPdf* org_westhoffswelt_pdfpresenter_view_pdf_get_renderer (orgwesthoffsweltpdfpresenterViewPdf* self);
orgwesthoffsweltpdfpresenterViewBase* org_westhoffswelt_pdfpresenter_view_base_construct (GType object_type, orgwesthoffsweltpdfpresenterRendererBase* renderer);
orgwesthoffsweltpdfpresenterRendererBase* org_westhoffswelt_pdfpresenter_view_base_get_renderer (orgwesthoffsweltpdfpresenterViewBase* self);
void org_westhoffswelt_pdfpresenter_view_base_display (orgwesthoffsweltpdfpresenterViewBase* self, gint slide_number, gboolean force_redraw, GError** error);
void org_westhoffswelt_pdfpresenter_view_base_fade_to_black (orgwesthoffsweltpdfpresenterViewBase* self);
void org_westhoffswelt_pdfpresenter_view_base_redraw (orgwesthoffsweltpdfpresenterViewBase* self, GError** error);
gint org_westhoffswelt_pdfpresenter_view_base_get_current_slide_number (orgwesthoffsweltpdfpresenterViewBase* self);
orgwesthoffsweltpdfpresenterViewDefault* org_westhoffswelt_pdfpresenter_view_default_new (orgwesthoffsweltpdfpresenterRendererBase* renderer);
orgwesthoffsweltpdfpresenterViewDefault* org_westhoffswelt_pdfpresenter_view_default_construct (GType object_type, orgwesthoffsweltpdfpresenterRendererBase* renderer);
void org_westhoffswelt_pdfpresenter_view_default_register_prerendering (orgwesthoffsweltpdfpresenterViewDefault* self);
GType org_westhoffswelt_pdfpresenter_window_overview_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterPresentationController* org_westhoffswelt_pdfpresenter_presentation_controller_new (orgwesthoffsweltpdfpresenterMetadataPdf* metadata, gboolean allow_black_on_end);
orgwesthoffsweltpdfpresenterPresentationController* org_westhoffswelt_pdfpresenter_presentation_controller_construct (GType object_type, orgwesthoffsweltpdfpresenterMetadataPdf* metadata, gboolean allow_black_on_end);
void org_westhoffswelt_pdfpresenter_presentation_controller_set_overview (orgwesthoffsweltpdfpresenterPresentationController* self, orgwesthoffsweltpdfpresenterWindowOverview* o);
gboolean org_westhoffswelt_pdfpresenter_presentation_controller_key_press (orgwesthoffsweltpdfpresenterPresentationController* self, GdkEventKey* key);
gboolean org_westhoffswelt_pdfpresenter_presentation_controller_key_press_normal (orgwesthoffsweltpdfpresenterPresentationController* self, GdkEventKey* key);
gboolean org_westhoffswelt_pdfpresenter_presentation_controller_key_press_overview (orgwesthoffsweltpdfpresenterPresentationController* self, GdkEventKey* key);
gboolean org_westhoffswelt_pdfpresenter_presentation_controller_button_press (orgwesthoffsweltpdfpresenterPresentationController* self, GdkEventButton* button);
void org_westhoffswelt_pdfpresenter_presentation_controller_scroll (orgwesthoffsweltpdfpresenterPresentationController* self, GdkEventScroll* scroll);
gint org_westhoffswelt_pdfpresenter_presentation_controller_get_current_slide_number (orgwesthoffsweltpdfpresenterPresentationController* self);
gint org_westhoffswelt_pdfpresenter_presentation_controller_get_current_user_slide_number (orgwesthoffsweltpdfpresenterPresentationController* self);
gboolean org_westhoffswelt_pdfpresenter_presentation_controller_skip_previous (orgwesthoffsweltpdfpresenterPresentationController* self);
gboolean org_westhoffswelt_pdfpresenter_presentation_controller_skip_next (orgwesthoffsweltpdfpresenterPresentationController* self);
gint org_westhoffswelt_pdfpresenter_presentation_controller_get_n_slide (orgwesthoffsweltpdfpresenterPresentationController* self);
gint org_westhoffswelt_pdfpresenter_presentation_controller_get_user_n_slides (orgwesthoffsweltpdfpresenterPresentationController* self);
gint org_westhoffswelt_pdfpresenter_presentation_controller_get_end_user_slide (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_set_end_user_slide (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_set_end_user_slide_overview (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_page_change_request (orgwesthoffsweltpdfpresenterPresentationController* self, gint page_number);
void org_westhoffswelt_pdfpresenter_presentation_controller_set_ignore_input_events (orgwesthoffsweltpdfpresenterPresentationController* self, gboolean v);
void org_westhoffswelt_pdfpresenter_presentation_controller_set_ignore_mouse_events (orgwesthoffsweltpdfpresenterPresentationController* self, gboolean v);
gboolean org_westhoffswelt_pdfpresenter_presentation_controller_register_controllable (orgwesthoffsweltpdfpresenterPresentationController* self, orgwesthoffsweltpdfpresenterControllable* controllable);
void org_westhoffswelt_pdfpresenter_presentation_controller_next_page (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_next_user_page (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_previous_page (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_previous_user_page (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_goto_first (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_goto_last (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_jump10 (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_back10 (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_goto_user_page (orgwesthoffsweltpdfpresenterPresentationController* self, gint page_number);
void org_westhoffswelt_pdfpresenter_presentation_controller_history_back (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_controllables_update (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_controllables_reset (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_controllables_show_overview (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_controllables_hide_overview (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_fade_to_black (orgwesthoffsweltpdfpresenterPresentationController* self);
gboolean org_westhoffswelt_pdfpresenter_presentation_controller_is_faded_to_black (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_controllables_edit_note (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_controllables_ask_goto_page (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_toggle_freeze (orgwesthoffsweltpdfpresenterPresentationController* self);
gboolean org_westhoffswelt_pdfpresenter_presentation_controller_is_frozen (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_toggle_skip (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_toggle_skip_overview (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_start (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_toggle_pause (orgwesthoffsweltpdfpresenterPresentationController* self);
void org_westhoffswelt_pdfpresenter_presentation_controller_reset_timer (orgwesthoffsweltpdfpresenterPresentationController* self);
GType org_westhoffswelt_pdfpresenter_mutex_locks_get_type (void) G_GNUC_CONST;
extern GMutex* org_westhoffswelt_pdfpresenter_mutex_locks_poppler;
void org_westhoffswelt_pdfpresenter_mutex_locks_init (void);
orgwesthoffsweltpdfpresenterMutexLocks* org_westhoffswelt_pdfpresenter_mutex_locks_new (void);
orgwesthoffsweltpdfpresenterMutexLocks* org_westhoffswelt_pdfpresenter_mutex_locks_construct (GType object_type);
orgwesthoffsweltpdfpresenterRendererPdf* org_westhoffswelt_pdfpresenter_renderer_pdf_new (orgwesthoffsweltpdfpresenterMetadataPdf* metadata, gint width, gint height);
orgwesthoffsweltpdfpresenterRendererPdf* org_westhoffswelt_pdfpresenter_renderer_pdf_construct (GType object_type, orgwesthoffsweltpdfpresenterMetadataPdf* metadata, gint width, gint height);
GType org_westhoffswelt_pdfpresenter_renderer_cache_option_factory_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterRendererCacheBase* org_westhoffswelt_pdfpresenter_renderer_cache_option_factory_create (orgwesthoffsweltpdfpresenterMetadataBase* metadata);
orgwesthoffsweltpdfpresenterRendererCacheBase* org_westhoffswelt_pdfpresenter_renderer_cache_base_construct (GType object_type, orgwesthoffsweltpdfpresenterMetadataBase* metadata);
gboolean org_westhoffswelt_pdfpresenter_renderer_cache_base_allows_prerendering (orgwesthoffsweltpdfpresenterRendererCacheBase* self);
void org_westhoffswelt_pdfpresenter_renderer_cache_base_store (orgwesthoffsweltpdfpresenterRendererCacheBase* self, guint index, GdkPixmap* pixmap);
GdkPixmap* org_westhoffswelt_pdfpresenter_renderer_cache_base_retrieve (orgwesthoffsweltpdfpresenterRendererCacheBase* self, guint index);
GType org_westhoffswelt_pdfpresenter_renderer_cache_simple_engine_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterRendererCacheSimpleEngine* org_westhoffswelt_pdfpresenter_renderer_cache_simple_engine_new (orgwesthoffsweltpdfpresenterMetadataBase* metadata);
orgwesthoffsweltpdfpresenterRendererCacheSimpleEngine* org_westhoffswelt_pdfpresenter_renderer_cache_simple_engine_construct (GType object_type, orgwesthoffsweltpdfpresenterMetadataBase* metadata);
GType org_westhoffswelt_pdfpresenter_renderer_cache_png_item_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterRendererCachePNGItem* org_westhoffswelt_pdfpresenter_renderer_cache_png_item_new (guint8* data, int data_length1);
orgwesthoffsweltpdfpresenterRendererCachePNGItem* org_westhoffswelt_pdfpresenter_renderer_cache_png_item_construct (GType object_type, guint8* data, int data_length1);
guint8* org_westhoffswelt_pdfpresenter_renderer_cache_png_item_get_png_data (orgwesthoffsweltpdfpresenterRendererCachePNGItem* self, int* result_length1);
gint org_westhoffswelt_pdfpresenter_renderer_cache_png_item_get_length (orgwesthoffsweltpdfpresenterRendererCachePNGItem* self);
GType org_westhoffswelt_pdfpresenter_renderer_cache_png_engine_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterRendererCachePNGEngine* org_westhoffswelt_pdfpresenter_renderer_cache_png_engine_new (orgwesthoffsweltpdfpresenterMetadataBase* metadata);
orgwesthoffsweltpdfpresenterRendererCachePNGEngine* org_westhoffswelt_pdfpresenter_renderer_cache_png_engine_construct (GType object_type, orgwesthoffsweltpdfpresenterMetadataBase* metadata);
orgwesthoffsweltpdfpresenterRendererBase* org_westhoffswelt_pdfpresenter_renderer_base_construct (GType object_type, orgwesthoffsweltpdfpresenterMetadataBase* metadata, gint width, gint height);
orgwesthoffsweltpdfpresenterMetadataBase* org_westhoffswelt_pdfpresenter_renderer_base_get_metadata (orgwesthoffsweltpdfpresenterRendererBase* self);
gint org_westhoffswelt_pdfpresenter_renderer_base_get_width (orgwesthoffsweltpdfpresenterRendererBase* self);
gint org_westhoffswelt_pdfpresenter_renderer_base_get_height (orgwesthoffsweltpdfpresenterRendererBase* self);
GdkPixmap* org_westhoffswelt_pdfpresenter_renderer_base_render_to_pixmap (orgwesthoffsweltpdfpresenterRendererBase* self, gint slide_number, GError** error);
GdkPixmap* org_westhoffswelt_pdfpresenter_renderer_base_fade_to_black (orgwesthoffsweltpdfpresenterRendererBase* self);
GType org_westhoffswelt_pdfpresenter_timer_label_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterTimerLabel* org_westhoffswelt_pdfpresenter_timer_label_construct (GType object_type, time_t start_time);
void org_westhoffswelt_pdfpresenter_timer_label_start (orgwesthoffsweltpdfpresenterTimerLabel* self);
void org_westhoffswelt_pdfpresenter_timer_label_stop (orgwesthoffsweltpdfpresenterTimerLabel* self);
gboolean org_westhoffswelt_pdfpresenter_timer_label_pause (orgwesthoffsweltpdfpresenterTimerLabel* self);
void org_westhoffswelt_pdfpresenter_timer_label_reset (orgwesthoffsweltpdfpresenterTimerLabel* self);
gint org_westhoffswelt_pdfpresenter_timer_label_calculate_countdown (orgwesthoffsweltpdfpresenterTimerLabel* self);
gboolean org_westhoffswelt_pdfpresenter_timer_label_on_timeout (orgwesthoffsweltpdfpresenterTimerLabel* self);
void org_westhoffswelt_pdfpresenter_timer_label_format_time (orgwesthoffsweltpdfpresenterTimerLabel* self);
void org_westhoffswelt_pdfpresenter_timer_label_show_time (orgwesthoffsweltpdfpresenterTimerLabel* self, guint timeInSecs, const gchar* prefix);
GType org_westhoffswelt_pdfpresenter_countdown_timer_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterCountdownTimer* org_westhoffswelt_pdfpresenter_countdown_timer_new (gint duration, guint last_minutes, time_t start_time);
orgwesthoffsweltpdfpresenterCountdownTimer* org_westhoffswelt_pdfpresenter_countdown_timer_construct (GType object_type, gint duration, guint last_minutes, time_t start_time);
GType org_westhoffswelt_pdfpresenter_end_time_timer_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterEndTimeTimer* org_westhoffswelt_pdfpresenter_end_time_timer_new (time_t end_time, guint last_minutes, time_t start_time);
orgwesthoffsweltpdfpresenterEndTimeTimer* org_westhoffswelt_pdfpresenter_end_time_timer_construct (GType object_type, time_t end_time, guint last_minutes, time_t start_time);
GType org_westhoffswelt_pdfpresenter_countup_timer_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterCountupTimer* org_westhoffswelt_pdfpresenter_countup_timer_new (time_t start_time);
orgwesthoffsweltpdfpresenterCountupTimer* org_westhoffswelt_pdfpresenter_countup_timer_construct (GType object_type, time_t start_time);
GType org_westhoffswelt_pdfpresenter_options_get_type (void) G_GNUC_CONST;
extern gboolean org_westhoffswelt_pdfpresenter_options_display_switch;
extern gboolean org_westhoffswelt_pdfpresenter_options_single_screen;
extern gboolean org_westhoffswelt_pdfpresenter_options_disable_caching;
extern gboolean org_westhoffswelt_pdfpresenter_options_disable_cache_compression;
extern guint org_westhoffswelt_pdfpresenter_options_duration;
extern guint org_westhoffswelt_pdfpresenter_options_last_minutes;
extern guint org_westhoffswelt_pdfpresenter_options_current_size;
extern gint org_westhoffswelt_pdfpresenter_options_min_overview_width;
extern gchar* org_westhoffswelt_pdfpresenter_options_start_time;
extern gchar* org_westhoffswelt_pdfpresenter_options_end_time;
extern gboolean org_westhoffswelt_pdfpresenter_options_black_on_end;
orgwesthoffsweltpdfpresenterOptions* org_westhoffswelt_pdfpresenter_options_new (void);
orgwesthoffsweltpdfpresenterOptions* org_westhoffswelt_pdfpresenter_options_construct (GType object_type);
gpointer org_westhoffswelt_pdfpresenter_cache_status_ref (gpointer instance);
void org_westhoffswelt_pdfpresenter_cache_status_unref (gpointer instance);
GParamSpec* org_westhoffswelt_pdfpresenter_param_spec_cache_status (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void org_westhoffswelt_pdfpresenter_value_set_cache_status (GValue* value, gpointer v_object);
void org_westhoffswelt_pdfpresenter_value_take_cache_status (GValue* value, gpointer v_object);
gpointer org_westhoffswelt_pdfpresenter_value_get_cache_status (const GValue* value);
GType org_westhoffswelt_pdfpresenter_cache_status_get_type (void) G_GNUC_CONST;
void org_westhoffswelt_pdfpresenter_cache_status_register_update (orgwesthoffsweltpdfpresenterCacheStatus* self, orgwesthoffsweltpdfpresenterCacheStatusUpdateFunction update, void* update_target, orgwesthoffsweltpdfpresenterCacheStatusUpdateComplete complete, void* complete_target);
void org_westhoffswelt_pdfpresenter_cache_status_update (orgwesthoffsweltpdfpresenterCacheStatus* self);
void org_westhoffswelt_pdfpresenter_cache_status_monitor_view (orgwesthoffsweltpdfpresenterCacheStatus* self, orgwesthoffsweltpdfpresenterViewPrerendering* view);
orgwesthoffsweltpdfpresenterCacheStatus* org_westhoffswelt_pdfpresenter_cache_status_new (void);
orgwesthoffsweltpdfpresenterCacheStatus* org_westhoffswelt_pdfpresenter_cache_status_construct (GType object_type);
GType org_westhoffswelt_pdfpresenter_window_fullscreen_get_type (void) G_GNUC_CONST;
GType org_westhoffswelt_pdfpresenter_window_presenter_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterWindowOverview* org_westhoffswelt_pdfpresenter_window_overview_new (orgwesthoffsweltpdfpresenterMetadataPdf* metadata, orgwesthoffsweltpdfpresenterPresentationController* presentation_controller, orgwesthoffsweltpdfpresenterWindowPresenter* presenter);
orgwesthoffsweltpdfpresenterWindowOverview* org_westhoffswelt_pdfpresenter_window_overview_construct (GType object_type, orgwesthoffsweltpdfpresenterMetadataPdf* metadata, orgwesthoffsweltpdfpresenterPresentationController* presentation_controller, orgwesthoffsweltpdfpresenterWindowPresenter* presenter);
void org_westhoffswelt_pdfpresenter_window_overview_setMaxWidth (orgwesthoffsweltpdfpresenterWindowOverview* self, gint width);
gboolean org_westhoffswelt_pdfpresenter_window_overview_on_key_press (orgwesthoffsweltpdfpresenterWindowOverview* self, GtkWidget* source, GdkEventKey* key);
void org_westhoffswelt_pdfpresenter_window_overview_fill_structure (orgwesthoffsweltpdfpresenterWindowOverview* self);
gboolean org_westhoffswelt_pdfpresenter_window_overview_idle_get_button_size_and_queue_fill_previews (orgwesthoffsweltpdfpresenterWindowOverview* self);
void org_westhoffswelt_pdfpresenter_window_overview_set_cache (orgwesthoffsweltpdfpresenterWindowOverview* self, orgwesthoffsweltpdfpresenterRendererCacheBase* cache);
void org_westhoffswelt_pdfpresenter_window_overview_set_n_slides (orgwesthoffsweltpdfpresenterWindowOverview* self, gint n);
void org_westhoffswelt_pdfpresenter_window_overview_invalidate (orgwesthoffsweltpdfpresenterWindowOverview* self);
gboolean org_westhoffswelt_pdfpresenter_window_overview_fill_previews (orgwesthoffsweltpdfpresenterWindowOverview* self);
void org_westhoffswelt_pdfpresenter_window_overview_set_current_button (orgwesthoffsweltpdfpresenterWindowOverview* self, gint b);
gint org_westhoffswelt_pdfpresenter_window_overview_get_current_button (orgwesthoffsweltpdfpresenterWindowOverview* self);
GType org_westhoffswelt_pdfpresenter_window_overview_button_get_type (void) G_GNUC_CONST;
extern GdkColor* org_westhoffswelt_pdfpresenter_window_overview_button_black;
extern GdkColor* org_westhoffswelt_pdfpresenter_window_overview_button_white;
extern GdkColor* org_westhoffswelt_pdfpresenter_window_overview_button_yellow;
extern PangoFontDescription* org_westhoffswelt_pdfpresenter_window_overview_button_font;
orgwesthoffsweltpdfpresenterWindowOverviewButton* org_westhoffswelt_pdfpresenter_window_overview_button_new (gint id, gdouble aspectRatio, orgwesthoffsweltpdfpresenterWindowOverview* overview, orgwesthoffsweltpdfpresenterPresentationController* presentation_controller);
orgwesthoffsweltpdfpresenterWindowOverviewButton* org_westhoffswelt_pdfpresenter_window_overview_button_construct (GType object_type, gint id, gdouble aspectRatio, orgwesthoffsweltpdfpresenterWindowOverview* overview, orgwesthoffsweltpdfpresenterPresentationController* presentation_controller);
void org_westhoffswelt_pdfpresenter_window_overview_button_set_current (orgwesthoffsweltpdfpresenterWindowOverviewButton* self);
void org_westhoffswelt_pdfpresenter_window_overview_button_unset_current (orgwesthoffsweltpdfpresenterWindowOverviewButton* self);
orgwesthoffsweltpdfpresenterWindowFullscreen* org_westhoffswelt_pdfpresenter_window_fullscreen_new (gint screen_num);
orgwesthoffsweltpdfpresenterWindowFullscreen* org_westhoffswelt_pdfpresenter_window_fullscreen_construct (GType object_type, gint screen_num);
void org_westhoffswelt_pdfpresenter_window_fullscreen_on_size_allocate (orgwesthoffsweltpdfpresenterWindowFullscreen* self, GtkWidget* source, GdkRectangle* r);
gboolean org_westhoffswelt_pdfpresenter_window_fullscreen_on_mouse_move (orgwesthoffsweltpdfpresenterWindowFullscreen* self, GtkWidget* source, GdkEventMotion* event);
void org_westhoffswelt_pdfpresenter_window_fullscreen_restart_hide_cursor_timer (orgwesthoffsweltpdfpresenterWindowFullscreen* self);
gboolean org_westhoffswelt_pdfpresenter_window_fullscreen_on_hide_cursor_timeout (orgwesthoffsweltpdfpresenterWindowFullscreen* self);
GType org_westhoffswelt_pdfpresenter_window_presentation_get_type (void) G_GNUC_CONST;
orgwesthoffsweltpdfpresenterWindowPresentation* org_westhoffswelt_pdfpresenter_window_presentation_new (orgwesthoffsweltpdfpresenterMetadataPdf* metadata, gint screen_num, orgwesthoffsweltpdfpresenterPresentationController* presentation_controller);
orgwesthoffsweltpdfpresenterWindowPresentation* org_westhoffswelt_pdfpresenter_window_presentation_construct (GType object_type, orgwesthoffsweltpdfpresenterMetadataPdf* metadata, gint screen_num, orgwesthoffsweltpdfpresenterPresentationController* presentation_controller);
gboolean org_westhoffswelt_pdfpresenter_window_presentation_on_key_pressed (orgwesthoffsweltpdfpresenterWindowPresentation* self, GdkEventKey* key);
gboolean org_westhoffswelt_pdfpresenter_window_presentation_on_button_press (orgwesthoffsweltpdfpresenterWindowPresentation* self, GdkEventButton* button);
gboolean org_westhoffswelt_pdfpresenter_window_presentation_on_scroll (orgwesthoffsweltpdfpresenterWindowPresentation* self, GtkWidget* source, GdkEventScroll* scroll);
void org_westhoffswelt_pdfpresenter_window_presentation_set_controller (orgwesthoffsweltpdfpresenterWindowPresentation* self, orgwesthoffsweltpdfpresenterPresentationController* controller);
void org_westhoffswelt_pdfpresenter_window_presentation_set_cache_observer (orgwesthoffsweltpdfpresenterWindowPresentation* self, orgwesthoffsweltpdfpresenterCacheStatus* observer);
orgwesthoffsweltpdfpresenterWindowPresenter* org_westhoffswelt_pdfpresenter_window_presenter_new (orgwesthoffsweltpdfpresenterMetadataPdf* metadata, gint screen_num, orgwesthoffsweltpdfpresenterPresentationController* presentation_controller);
orgwesthoffsweltpdfpresenterWindowPresenter* org_westhoffswelt_pdfpresenter_window_presenter_construct (GType object_type, orgwesthoffsweltpdfpresenterMetadataPdf* metadata, gint screen_num, orgwesthoffsweltpdfpresenterPresentationController* presentation_controller);
void org_westhoffswelt_pdfpresenter_window_presenter_build_layout (orgwesthoffsweltpdfpresenterWindowPresenter* self);
gboolean org_westhoffswelt_pdfpresenter_window_presenter_on_key_pressed (orgwesthoffsweltpdfpresenterWindowPresenter* self, GtkWidget* source, GdkEventKey* key);
gboolean org_westhoffswelt_pdfpresenter_window_presenter_on_button_press (orgwesthoffsweltpdfpresenterWindowPresenter* self, GtkWidget* source, GdkEventButton* button);
gboolean org_westhoffswelt_pdfpresenter_window_presenter_on_scroll (orgwesthoffsweltpdfpresenterWindowPresenter* self, GtkWidget* source, GdkEventScroll* scroll);
void org_westhoffswelt_pdfpresenter_window_presenter_update_slide_count (orgwesthoffsweltpdfpresenterWindowPresenter* self);
void org_westhoffswelt_pdfpresenter_window_presenter_custom_slide_count (orgwesthoffsweltpdfpresenterWindowPresenter* self, gint current, gint total);
void org_westhoffswelt_pdfpresenter_window_presenter_goto_page (orgwesthoffsweltpdfpresenterWindowPresenter* self, gint page_number);
gboolean org_westhoffswelt_pdfpresenter_window_presenter_on_key_press_slide_progress (orgwesthoffsweltpdfpresenterWindowPresenter* self, GtkWidget* source, GdkEventKey* key);
gboolean org_westhoffswelt_pdfpresenter_window_presenter_on_key_press_notes_view (orgwesthoffsweltpdfpresenterWindowPresenter* self, GtkWidget* source, GdkEventKey* key);
void org_westhoffswelt_pdfpresenter_window_presenter_update_note (orgwesthoffsweltpdfpresenterWindowPresenter* self);
void org_westhoffswelt_pdfpresenter_window_presenter_set_cache_observer (orgwesthoffsweltpdfpresenterWindowPresenter* self, orgwesthoffsweltpdfpresenterCacheStatus* observer);
void org_westhoffswelt_pdfpresenter_window_presenter_prerender_finished (orgwesthoffsweltpdfpresenterWindowPresenter* self);
GType org_westhoffswelt_pdfpresenter_slides_notes_get_type (void) G_GNUC_CONST;
void org_westhoffswelt_pdfpresenter_metadata_pdf_save_to_disk (orgwesthoffsweltpdfpresenterMetadataPdf* self);
gchar* org_westhoffswelt_pdfpresenter_metadata_pdf_format_skips (orgwesthoffsweltpdfpresenterMetadataPdf* self);
gchar* org_westhoffswelt_pdfpresenter_metadata_pdf_format_end_user_slide (orgwesthoffsweltpdfpresenterMetadataPdf* self);
gchar* org_westhoffswelt_pdfpresenter_metadata_pdf_format_notes (orgwesthoffsweltpdfpresenterMetadataPdf* self);
gchar* org_westhoffswelt_pdfpresenter_metadata_pdf_format_duration (orgwesthoffsweltpdfpresenterMetadataPdf* self);
orgwesthoffsweltpdfpresenterMetadataPdf* org_westhoffswelt_pdfpresenter_metadata_pdf_new (const gchar* fname);
orgwesthoffsweltpdfpresenterMetadataPdf* org_westhoffswelt_pdfpresenter_metadata_pdf_construct (GType object_type, const gchar* fname);
gint org_westhoffswelt_pdfpresenter_metadata_pdf_get_user_slide_count (orgwesthoffsweltpdfpresenterMetadataPdf* self);
gint org_westhoffswelt_pdfpresenter_metadata_pdf_get_end_user_slide (orgwesthoffsweltpdfpresenterMetadataPdf* self);
void org_westhoffswelt_pdfpresenter_metadata_pdf_set_end_user_slide (orgwesthoffsweltpdfpresenterMetadataPdf* self, gint slide);
gint org_westhoffswelt_pdfpresenter_metadata_pdf_toggle_skip (orgwesthoffsweltpdfpresenterMetadataPdf* self, gint slide_number, gint user_slide_number);
gint org_westhoffswelt_pdfpresenter_metadata_pdf_user_slide_to_real_slide (orgwesthoffsweltpdfpresenterMetadataPdf* self, gint number);
gint org_westhoffswelt_pdfpresenter_metadata_pdf_real_slide_to_user_slide (orgwesthoffsweltpdfpresenterMetadataPdf* self, gint number);
gdouble org_westhoffswelt_pdfpresenter_metadata_pdf_get_page_width (orgwesthoffsweltpdfpresenterMetadataPdf* self);
gdouble org_westhoffswelt_pdfpresenter_metadata_pdf_get_page_height (orgwesthoffsweltpdfpresenterMetadataPdf* self);
PopplerDocument* org_westhoffswelt_pdfpresenter_metadata_pdf_get_document (orgwesthoffsweltpdfpresenterMetadataPdf* self);
orgwesthoffsweltpdfpresenterslides_notes* org_westhoffswelt_pdfpresenter_metadata_pdf_get_notes (orgwesthoffsweltpdfpresenterMetadataPdf* self);
guint org_westhoffswelt_pdfpresenter_metadata_pdf_get_duration (orgwesthoffsweltpdfpresenterMetadataPdf* self);
void org_westhoffswelt_pdfpresenter_metadata_pdf_set_duration (orgwesthoffsweltpdfpresenterMetadataPdf* self, guint d);
PopplerDocument* org_westhoffswelt_pdfpresenter_metadata_pdf_open_pdf_document (orgwesthoffsweltpdfpresenterMetadataPdf* self, const gchar* url);
void org_westhoffswelt_pdfpresenter_slides_notes_set_note (orgwesthoffsweltpdfpresenterslides_notes* self, const gchar* note, gint slide_number);
gchar* org_westhoffswelt_pdfpresenter_slides_notes_get_note_for_slide (orgwesthoffsweltpdfpresenterslides_notes* self, gint number);
gboolean org_westhoffswelt_pdfpresenter_slides_notes_has_notes (orgwesthoffsweltpdfpresenterslides_notes* self);
gchar* org_westhoffswelt_pdfpresenter_slides_notes_format_to_save (orgwesthoffsweltpdfpresenterslides_notes* self);
void org_westhoffswelt_pdfpresenter_slides_notes_parse_lines (orgwesthoffsweltpdfpresenterslides_notes* self, gchar** lines, int lines_length1);
orgwesthoffsweltpdfpresenterslides_notes* org_westhoffswelt_pdfpresenter_slides_notes_new (void);
orgwesthoffsweltpdfpresenterslides_notes* org_westhoffswelt_pdfpresenter_slides_notes_construct (GType object_type);
orgwesthoffsweltpdfpresenterMetadataBase* org_westhoffswelt_pdfpresenter_metadata_base_construct (GType object_type, const gchar* fname);
gchar* org_westhoffswelt_pdfpresenter_metadata_base_get_url (orgwesthoffsweltpdfpresenterMetadataBase* self);
guint org_westhoffswelt_pdfpresenter_metadata_base_get_slide_count (orgwesthoffsweltpdfpresenterMetadataBase* self);


G_END_DECLS

#endif
